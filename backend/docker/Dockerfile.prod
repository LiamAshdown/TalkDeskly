# Build stage
FROM golang:1.24-alpine AS builder

WORKDIR /app

# Install build dependencies for CGO and webp library
RUN apk update && apk add --no-cache \
    gcc \
    g++ \
    musl-dev \
    libc-dev \
    build-base \
    git \
    pkgconfig \
    make

# Verify gcc installation
RUN gcc --version

# Copy go mod files first and download dependencies
COPY go.mod go.sum ./

# Enable CGO before downloading dependencies
ENV CGO_ENABLED=1
ENV GOOS=linux
ENV CC=gcc

RUN go mod download

# Copy the rest of the code
COPY . .

# Build the binary
RUN go build -ldflags="-w -s" -o talkdeskly main.go

# Production stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata

WORKDIR /root/

# Copy the binary from builder stage
COPY --from=builder /app/talkdeskly .

# Copy necessary directories and files
COPY --from=builder /app/public ./public
COPY --from=builder /app/templates ./templates
COPY --from=builder /app/i18n ./i18n

# Create required directories
RUN mkdir -p ./storage ./logs ./uploads

# Expose port
EXPOSE 8080

# Run the binary
CMD ["./talkdeskly"]